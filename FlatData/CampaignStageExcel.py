# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class CampaignStageExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsCampaignStageExcel(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = CampaignStageExcel()
        x.Init(buf, n + offset)
        return x

    # CampaignStageExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # CampaignStageExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CampaignStageExcel
    def Deprecated(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # CampaignStageExcel
    def Name(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CampaignStageExcel
    def StageNumber(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CampaignStageExcel
    def CleardScenarioId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CampaignStageExcel
    def BattleDuration(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CampaignStageExcel
    def StageEnterCostType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CampaignStageExcel
    def StageEnterCostId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CampaignStageExcel
    def StageEnterCostAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CampaignStageExcel
    def StageEnterEchelonCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CampaignStageExcel
    def StarConditionTacticRankSCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CampaignStageExcel
    def StarConditionTurnCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CampaignStageExcel
    def EnterScenarioGroupId(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int64Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 8))
        return 0

    # CampaignStageExcel
    def EnterScenarioGroupIdAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int64Flags, o)
        return 0

    # CampaignStageExcel
    def EnterScenarioGroupIdLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # CampaignStageExcel
    def EnterScenarioGroupIdIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        return o == 0

    # CampaignStageExcel
    def ClearScenarioGroupId(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int64Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 8))
        return 0

    # CampaignStageExcel
    def ClearScenarioGroupIdAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int64Flags, o)
        return 0

    # CampaignStageExcel
    def ClearScenarioGroupIdLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # CampaignStageExcel
    def ClearScenarioGroupIdIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        return o == 0

    # CampaignStageExcel
    def StrategyMap(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CampaignStageExcel
    def StrategyMapBG(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CampaignStageExcel
    def CampaignStageRewardId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CampaignStageExcel
    def MaxTurn(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(38))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CampaignStageExcel
    def StageTopography(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(40))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CampaignStageExcel
    def RecommandLevel(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(42))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CampaignStageExcel
    def BgmId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(44))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CampaignStageExcel
    def StrategyEnvironment(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(46))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CampaignStageExcel
    def GroundId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(48))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CampaignStageExcel
    def StrategySkipGroundId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(50))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CampaignStageExcel
    def ContentType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(52))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CampaignStageExcel
    def BGMId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(54))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CampaignStageExcel
    def FirstClearReportEventName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(56))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CampaignStageExcel
    def FirstClearFunnelMessage(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(58))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CampaignStageExcel
    def FirstClearEventMessage(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(60))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CampaignStageExcel
    def TacticRewardExp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(62))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CampaignStageExcel
    def FixedEchelonId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(64))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CampaignStageExcel
    def EchelonExtensionType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(66))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def CampaignStageExcelStart(builder): builder.StartObject(32)
def CampaignStageExcelAddId(builder, Id): builder.PrependInt64Slot(0, Id, 0)
def CampaignStageExcelAddDeprecated(builder, Deprecated): builder.PrependBoolSlot(1, Deprecated, 0)
def CampaignStageExcelAddName(builder, Name): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(Name), 0)
def CampaignStageExcelAddStageNumber(builder, StageNumber): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(StageNumber), 0)
def CampaignStageExcelAddCleardScenarioId(builder, CleardScenarioId): builder.PrependInt64Slot(4, CleardScenarioId, 0)
def CampaignStageExcelAddBattleDuration(builder, BattleDuration): builder.PrependInt64Slot(5, BattleDuration, 0)
def CampaignStageExcelAddStageEnterCostType(builder, StageEnterCostType): builder.PrependInt32Slot(6, StageEnterCostType, 0)
def CampaignStageExcelAddStageEnterCostId(builder, StageEnterCostId): builder.PrependInt64Slot(7, StageEnterCostId, 0)
def CampaignStageExcelAddStageEnterCostAmount(builder, StageEnterCostAmount): builder.PrependInt32Slot(8, StageEnterCostAmount, 0)
def CampaignStageExcelAddStageEnterEchelonCount(builder, StageEnterEchelonCount): builder.PrependInt32Slot(9, StageEnterEchelonCount, 0)
def CampaignStageExcelAddStarConditionTacticRankSCount(builder, StarConditionTacticRankSCount): builder.PrependInt64Slot(10, StarConditionTacticRankSCount, 0)
def CampaignStageExcelAddStarConditionTurnCount(builder, StarConditionTurnCount): builder.PrependInt64Slot(11, StarConditionTurnCount, 0)
def CampaignStageExcelAddEnterScenarioGroupId(builder, EnterScenarioGroupId): builder.PrependUOffsetTRelativeSlot(12, flatbuffers.number_types.UOffsetTFlags.py_type(EnterScenarioGroupId), 0)
def CampaignStageExcelStartEnterScenarioGroupIdVector(builder, numElems): return builder.StartVector(8, numElems, 8)
def CampaignStageExcelAddClearScenarioGroupId(builder, ClearScenarioGroupId): builder.PrependUOffsetTRelativeSlot(13, flatbuffers.number_types.UOffsetTFlags.py_type(ClearScenarioGroupId), 0)
def CampaignStageExcelStartClearScenarioGroupIdVector(builder, numElems): return builder.StartVector(8, numElems, 8)
def CampaignStageExcelAddStrategyMap(builder, StrategyMap): builder.PrependUOffsetTRelativeSlot(14, flatbuffers.number_types.UOffsetTFlags.py_type(StrategyMap), 0)
def CampaignStageExcelAddStrategyMapBG(builder, StrategyMapBG): builder.PrependUOffsetTRelativeSlot(15, flatbuffers.number_types.UOffsetTFlags.py_type(StrategyMapBG), 0)
def CampaignStageExcelAddCampaignStageRewardId(builder, CampaignStageRewardId): builder.PrependInt64Slot(16, CampaignStageRewardId, 0)
def CampaignStageExcelAddMaxTurn(builder, MaxTurn): builder.PrependInt32Slot(17, MaxTurn, 0)
def CampaignStageExcelAddStageTopography(builder, StageTopography): builder.PrependInt32Slot(18, StageTopography, 0)
def CampaignStageExcelAddRecommandLevel(builder, RecommandLevel): builder.PrependInt32Slot(19, RecommandLevel, 0)
def CampaignStageExcelAddBgmId(builder, BgmId): builder.PrependUOffsetTRelativeSlot(20, flatbuffers.number_types.UOffsetTFlags.py_type(BgmId), 0)
def CampaignStageExcelAddStrategyEnvironment(builder, StrategyEnvironment): builder.PrependInt32Slot(21, StrategyEnvironment, 0)
def CampaignStageExcelAddGroundId(builder, GroundId): builder.PrependInt64Slot(22, GroundId, 0)
def CampaignStageExcelAddStrategySkipGroundId(builder, StrategySkipGroundId): builder.PrependInt32Slot(23, StrategySkipGroundId, 0)
def CampaignStageExcelAddContentType(builder, ContentType): builder.PrependInt32Slot(24, ContentType, 0)
def CampaignStageExcelAddBGMId(builder, BGMId): builder.PrependInt64Slot(25, BGMId, 0)
def CampaignStageExcelAddFirstClearReportEventName(builder, FirstClearReportEventName): builder.PrependUOffsetTRelativeSlot(26, flatbuffers.number_types.UOffsetTFlags.py_type(FirstClearReportEventName), 0)
def CampaignStageExcelAddFirstClearFunnelMessage(builder, FirstClearFunnelMessage): builder.PrependUOffsetTRelativeSlot(27, flatbuffers.number_types.UOffsetTFlags.py_type(FirstClearFunnelMessage), 0)
def CampaignStageExcelAddFirstClearEventMessage(builder, FirstClearEventMessage): builder.PrependUOffsetTRelativeSlot(28, flatbuffers.number_types.UOffsetTFlags.py_type(FirstClearEventMessage), 0)
def CampaignStageExcelAddTacticRewardExp(builder, TacticRewardExp): builder.PrependInt64Slot(29, TacticRewardExp, 0)
def CampaignStageExcelAddFixedEchelonId(builder, FixedEchelonId): builder.PrependInt64Slot(30, FixedEchelonId, 0)
def CampaignStageExcelAddEchelonExtensionType(builder, EchelonExtensionType): builder.PrependInt32Slot(31, EchelonExtensionType, 0)
def CampaignStageExcelEnd(builder): return builder.EndObject()
