# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class StickerPageContentExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsStickerPageContentExcel(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = StickerPageContentExcel()
        x.Init(buf, n + offset)
        return x

    # StickerPageContentExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # StickerPageContentExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # StickerPageContentExcel
    def StickerGroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # StickerPageContentExcel
    def StickerPageId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # StickerPageContentExcel
    def StickerSlot(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # StickerPageContentExcel
    def StickerGetConditionType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # StickerPageContentExcel
    def StickerCheckPassType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # StickerPageContentExcel
    def GetStickerConditionType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # StickerPageContentExcel
    def StickerGetConditionCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # StickerPageContentExcel
    def StickerGetConditionParameter(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int64Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 8))
        return 0

    # StickerPageContentExcel
    def StickerGetConditionParameterAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int64Flags, o)
        return 0

    # StickerPageContentExcel
    def StickerGetConditionParameterLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # StickerPageContentExcel
    def StickerGetConditionParameterIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        return o == 0

    # StickerPageContentExcel
    def StickerGetConditionParameterTag(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # StickerPageContentExcel
    def StickerGetConditionParameterTagAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int32Flags, o)
        return 0

    # StickerPageContentExcel
    def StickerGetConditionParameterTagLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # StickerPageContentExcel
    def StickerGetConditionParameterTagIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        return o == 0

    # StickerPageContentExcel
    def PackedStickerIconLocalizeEtcId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # StickerPageContentExcel
    def PackedStickerIconPath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # StickerPageContentExcel
    def IconPath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # StickerPageContentExcel
    def StickerDetailPath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def StickerPageContentExcelStart(builder): builder.StartObject(14)
def StickerPageContentExcelAddId(builder, Id): builder.PrependInt64Slot(0, Id, 0)
def StickerPageContentExcelAddStickerGroupId(builder, StickerGroupId): builder.PrependInt64Slot(1, StickerGroupId, 0)
def StickerPageContentExcelAddStickerPageId(builder, StickerPageId): builder.PrependInt64Slot(2, StickerPageId, 0)
def StickerPageContentExcelAddStickerSlot(builder, StickerSlot): builder.PrependInt64Slot(3, StickerSlot, 0)
def StickerPageContentExcelAddStickerGetConditionType(builder, StickerGetConditionType): builder.PrependInt32Slot(4, StickerGetConditionType, 0)
def StickerPageContentExcelAddStickerCheckPassType(builder, StickerCheckPassType): builder.PrependInt32Slot(5, StickerCheckPassType, 0)
def StickerPageContentExcelAddGetStickerConditionType(builder, GetStickerConditionType): builder.PrependInt32Slot(6, GetStickerConditionType, 0)
def StickerPageContentExcelAddStickerGetConditionCount(builder, StickerGetConditionCount): builder.PrependInt64Slot(7, StickerGetConditionCount, 0)
def StickerPageContentExcelAddStickerGetConditionParameter(builder, StickerGetConditionParameter): builder.PrependUOffsetTRelativeSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(StickerGetConditionParameter), 0)
def StickerPageContentExcelStartStickerGetConditionParameterVector(builder, numElems): return builder.StartVector(8, numElems, 8)
def StickerPageContentExcelAddStickerGetConditionParameterTag(builder, StickerGetConditionParameterTag): builder.PrependUOffsetTRelativeSlot(9, flatbuffers.number_types.UOffsetTFlags.py_type(StickerGetConditionParameterTag), 0)
def StickerPageContentExcelStartStickerGetConditionParameterTagVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def StickerPageContentExcelAddPackedStickerIconLocalizeEtcId(builder, PackedStickerIconLocalizeEtcId): builder.PrependUint32Slot(10, PackedStickerIconLocalizeEtcId, 0)
def StickerPageContentExcelAddPackedStickerIconPath(builder, PackedStickerIconPath): builder.PrependUOffsetTRelativeSlot(11, flatbuffers.number_types.UOffsetTFlags.py_type(PackedStickerIconPath), 0)
def StickerPageContentExcelAddIconPath(builder, IconPath): builder.PrependUOffsetTRelativeSlot(12, flatbuffers.number_types.UOffsetTFlags.py_type(IconPath), 0)
def StickerPageContentExcelAddStickerDetailPath(builder, StickerDetailPath): builder.PrependUOffsetTRelativeSlot(13, flatbuffers.number_types.UOffsetTFlags.py_type(StickerDetailPath), 0)
def StickerPageContentExcelEnd(builder): return builder.EndObject()
