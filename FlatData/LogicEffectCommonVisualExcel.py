# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class LogicEffectCommonVisualExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsLogicEffectCommonVisualExcel(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = LogicEffectCommonVisualExcel()
        x.Init(buf, n + offset)
        return x

    # LogicEffectCommonVisualExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # LogicEffectCommonVisualExcel
    def StringID(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # LogicEffectCommonVisualExcel
    def IconSpriteName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # LogicEffectCommonVisualExcel
    def IconDispelColor(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Float32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # LogicEffectCommonVisualExcel
    def IconDispelColorAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Float32Flags, o)
        return 0

    # LogicEffectCommonVisualExcel
    def IconDispelColorLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # LogicEffectCommonVisualExcel
    def IconDispelColorIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        return o == 0

    # LogicEffectCommonVisualExcel
    def ParticleEnterPath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # LogicEffectCommonVisualExcel
    def ParticleEnterSocket(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # LogicEffectCommonVisualExcel
    def ParticleLoopPath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # LogicEffectCommonVisualExcel
    def ParticleLoopSocket(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # LogicEffectCommonVisualExcel
    def ParticleEndPath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # LogicEffectCommonVisualExcel
    def ParticleEndSocket(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # LogicEffectCommonVisualExcel
    def ParticleApplyPath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # LogicEffectCommonVisualExcel
    def ParticleApplySocket(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # LogicEffectCommonVisualExcel
    def ParticleRemovedPath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # LogicEffectCommonVisualExcel
    def ParticleRemovedSocket(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def LogicEffectCommonVisualExcelStart(builder): builder.StartObject(13)
def LogicEffectCommonVisualExcelAddStringID(builder, StringID): builder.PrependUint32Slot(0, StringID, 0)
def LogicEffectCommonVisualExcelAddIconSpriteName(builder, IconSpriteName): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(IconSpriteName), 0)
def LogicEffectCommonVisualExcelAddIconDispelColor(builder, IconDispelColor): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(IconDispelColor), 0)
def LogicEffectCommonVisualExcelStartIconDispelColorVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def LogicEffectCommonVisualExcelAddParticleEnterPath(builder, ParticleEnterPath): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(ParticleEnterPath), 0)
def LogicEffectCommonVisualExcelAddParticleEnterSocket(builder, ParticleEnterSocket): builder.PrependInt32Slot(4, ParticleEnterSocket, 0)
def LogicEffectCommonVisualExcelAddParticleLoopPath(builder, ParticleLoopPath): builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(ParticleLoopPath), 0)
def LogicEffectCommonVisualExcelAddParticleLoopSocket(builder, ParticleLoopSocket): builder.PrependInt32Slot(6, ParticleLoopSocket, 0)
def LogicEffectCommonVisualExcelAddParticleEndPath(builder, ParticleEndPath): builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(ParticleEndPath), 0)
def LogicEffectCommonVisualExcelAddParticleEndSocket(builder, ParticleEndSocket): builder.PrependInt32Slot(8, ParticleEndSocket, 0)
def LogicEffectCommonVisualExcelAddParticleApplyPath(builder, ParticleApplyPath): builder.PrependUOffsetTRelativeSlot(9, flatbuffers.number_types.UOffsetTFlags.py_type(ParticleApplyPath), 0)
def LogicEffectCommonVisualExcelAddParticleApplySocket(builder, ParticleApplySocket): builder.PrependInt32Slot(10, ParticleApplySocket, 0)
def LogicEffectCommonVisualExcelAddParticleRemovedPath(builder, ParticleRemovedPath): builder.PrependUOffsetTRelativeSlot(11, flatbuffers.number_types.UOffsetTFlags.py_type(ParticleRemovedPath), 0)
def LogicEffectCommonVisualExcelAddParticleRemovedSocket(builder, ParticleRemovedSocket): builder.PrependInt32Slot(12, ParticleRemovedSocket, 0)
def LogicEffectCommonVisualExcelEnd(builder): return builder.EndObject()
