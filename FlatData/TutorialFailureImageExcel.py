# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class TutorialFailureImageExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsTutorialFailureImageExcel(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = TutorialFailureImageExcel()
        x.Init(buf, n + offset)
        return x

    # TutorialFailureImageExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # TutorialFailureImageExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # TutorialFailureImageExcel
    def Contents(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # TutorialFailureImageExcel
    def Type(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # TutorialFailureImageExcel
    def ImagePathKr(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # TutorialFailureImageExcel
    def ImagePathJp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # TutorialFailureImageExcel
    def ImagePathTh(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # TutorialFailureImageExcel
    def ImagePathTw(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # TutorialFailureImageExcel
    def ImagePathEn(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def TutorialFailureImageExcelStart(builder): builder.StartObject(8)
def TutorialFailureImageExcelAddId(builder, Id): builder.PrependInt64Slot(0, Id, 0)
def TutorialFailureImageExcelAddContents(builder, Contents): builder.PrependInt32Slot(1, Contents, 0)
def TutorialFailureImageExcelAddType(builder, Type): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(Type), 0)
def TutorialFailureImageExcelAddImagePathKr(builder, ImagePathKr): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(ImagePathKr), 0)
def TutorialFailureImageExcelAddImagePathJp(builder, ImagePathJp): builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(ImagePathJp), 0)
def TutorialFailureImageExcelAddImagePathTh(builder, ImagePathTh): builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(ImagePathTh), 0)
def TutorialFailureImageExcelAddImagePathTw(builder, ImagePathTw): builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(ImagePathTw), 0)
def TutorialFailureImageExcelAddImagePathEn(builder, ImagePathEn): builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(ImagePathEn), 0)
def TutorialFailureImageExcelEnd(builder): return builder.EndObject()
