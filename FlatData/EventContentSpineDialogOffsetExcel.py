# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class EventContentSpineDialogOffsetExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsEventContentSpineDialogOffsetExcel(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = EventContentSpineDialogOffsetExcel()
        x.Init(buf, n + offset)
        return x

    # EventContentSpineDialogOffsetExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # EventContentSpineDialogOffsetExcel
    def EventContentId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EventContentSpineDialogOffsetExcel
    def EventContentType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # EventContentSpineDialogOffsetExcel
    def CostumeUniqueId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EventContentSpineDialogOffsetExcel
    def SpineOffsetX(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # EventContentSpineDialogOffsetExcel
    def SpineOffsetY(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # EventContentSpineDialogOffsetExcel
    def DialogOffsetX(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # EventContentSpineDialogOffsetExcel
    def DialogOffsetY(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

def EventContentSpineDialogOffsetExcelStart(builder): builder.StartObject(7)
def EventContentSpineDialogOffsetExcelAddEventContentId(builder, EventContentId): builder.PrependInt64Slot(0, EventContentId, 0)
def EventContentSpineDialogOffsetExcelAddEventContentType(builder, EventContentType): builder.PrependInt32Slot(1, EventContentType, 0)
def EventContentSpineDialogOffsetExcelAddCostumeUniqueId(builder, CostumeUniqueId): builder.PrependInt64Slot(2, CostumeUniqueId, 0)
def EventContentSpineDialogOffsetExcelAddSpineOffsetX(builder, SpineOffsetX): builder.PrependFloat32Slot(3, SpineOffsetX, 0.0)
def EventContentSpineDialogOffsetExcelAddSpineOffsetY(builder, SpineOffsetY): builder.PrependFloat32Slot(4, SpineOffsetY, 0.0)
def EventContentSpineDialogOffsetExcelAddDialogOffsetX(builder, DialogOffsetX): builder.PrependFloat32Slot(5, DialogOffsetX, 0.0)
def EventContentSpineDialogOffsetExcelAddDialogOffsetY(builder, DialogOffsetY): builder.PrependFloat32Slot(6, DialogOffsetY, 0.0)
def EventContentSpineDialogOffsetExcelEnd(builder): return builder.EndObject()
