# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class CampaignStrategyObjectExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsCampaignStrategyObjectExcel(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = CampaignStrategyObjectExcel()
        x.Init(buf, n + offset)
        return x

    # CampaignStrategyObjectExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # CampaignStrategyObjectExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CampaignStrategyObjectExcel
    def Key(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # CampaignStrategyObjectExcel
    def Name(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CampaignStrategyObjectExcel
    def PrefabName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CampaignStrategyObjectExcel
    def StrategyObjectType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CampaignStrategyObjectExcel
    def StrategyRewardParcelType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CampaignStrategyObjectExcel
    def StrategyRewardID(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CampaignStrategyObjectExcel
    def StrategyRewardName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CampaignStrategyObjectExcel
    def StrategyRewardAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CampaignStrategyObjectExcel
    def StrategySightRange(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CampaignStrategyObjectExcel
    def PortalId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CampaignStrategyObjectExcel
    def HealValue(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CampaignStrategyObjectExcel
    def SwithId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CampaignStrategyObjectExcel
    def BuffId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CampaignStrategyObjectExcel
    def Disposable(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

def CampaignStrategyObjectExcelStart(builder): builder.StartObject(15)
def CampaignStrategyObjectExcelAddId(builder, Id): builder.PrependInt64Slot(0, Id, 0)
def CampaignStrategyObjectExcelAddKey(builder, Key): builder.PrependUint32Slot(1, Key, 0)
def CampaignStrategyObjectExcelAddName(builder, Name): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(Name), 0)
def CampaignStrategyObjectExcelAddPrefabName(builder, PrefabName): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(PrefabName), 0)
def CampaignStrategyObjectExcelAddStrategyObjectType(builder, StrategyObjectType): builder.PrependInt32Slot(4, StrategyObjectType, 0)
def CampaignStrategyObjectExcelAddStrategyRewardParcelType(builder, StrategyRewardParcelType): builder.PrependInt32Slot(5, StrategyRewardParcelType, 0)
def CampaignStrategyObjectExcelAddStrategyRewardID(builder, StrategyRewardID): builder.PrependInt64Slot(6, StrategyRewardID, 0)
def CampaignStrategyObjectExcelAddStrategyRewardName(builder, StrategyRewardName): builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(StrategyRewardName), 0)
def CampaignStrategyObjectExcelAddStrategyRewardAmount(builder, StrategyRewardAmount): builder.PrependInt32Slot(8, StrategyRewardAmount, 0)
def CampaignStrategyObjectExcelAddStrategySightRange(builder, StrategySightRange): builder.PrependInt64Slot(9, StrategySightRange, 0)
def CampaignStrategyObjectExcelAddPortalId(builder, PortalId): builder.PrependInt32Slot(10, PortalId, 0)
def CampaignStrategyObjectExcelAddHealValue(builder, HealValue): builder.PrependInt32Slot(11, HealValue, 0)
def CampaignStrategyObjectExcelAddSwithId(builder, SwithId): builder.PrependInt32Slot(12, SwithId, 0)
def CampaignStrategyObjectExcelAddBuffId(builder, BuffId): builder.PrependInt32Slot(13, BuffId, 0)
def CampaignStrategyObjectExcelAddDisposable(builder, Disposable): builder.PrependBoolSlot(14, Disposable, 0)
def CampaignStrategyObjectExcelEnd(builder): return builder.EndObject()
