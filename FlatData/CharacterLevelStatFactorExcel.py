# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class CharacterLevelStatFactorExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsCharacterLevelStatFactorExcel(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = CharacterLevelStatFactorExcel()
        x.Init(buf, n + offset)
        return x

    # CharacterLevelStatFactorExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # CharacterLevelStatFactorExcel
    def Level(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CharacterLevelStatFactorExcel
    def CriticalFactor(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CharacterLevelStatFactorExcel
    def StabilityFactor(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CharacterLevelStatFactorExcel
    def DefenceFactor(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CharacterLevelStatFactorExcel
    def AccuracyFactor(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def CharacterLevelStatFactorExcelStart(builder): builder.StartObject(5)
def CharacterLevelStatFactorExcelAddLevel(builder, Level): builder.PrependInt64Slot(0, Level, 0)
def CharacterLevelStatFactorExcelAddCriticalFactor(builder, CriticalFactor): builder.PrependInt64Slot(1, CriticalFactor, 0)
def CharacterLevelStatFactorExcelAddStabilityFactor(builder, StabilityFactor): builder.PrependInt64Slot(2, StabilityFactor, 0)
def CharacterLevelStatFactorExcelAddDefenceFactor(builder, DefenceFactor): builder.PrependInt64Slot(3, DefenceFactor, 0)
def CharacterLevelStatFactorExcelAddAccuracyFactor(builder, AccuracyFactor): builder.PrependInt64Slot(4, AccuracyFactor, 0)
def CharacterLevelStatFactorExcelEnd(builder): return builder.EndObject()
