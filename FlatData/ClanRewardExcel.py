# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ClanRewardExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsClanRewardExcel(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ClanRewardExcel()
        x.Init(buf, n + offset)
        return x

    # ClanRewardExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ClanRewardExcel
    def ClanRewardType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ClanRewardExcel
    def EchelonType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ClanRewardExcel
    def RewardParcelType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ClanRewardExcel
    def RewardParcelId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ClanRewardExcel
    def RewardParcelAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def ClanRewardExcelStart(builder): builder.StartObject(5)
def ClanRewardExcelAddClanRewardType(builder, ClanRewardType): builder.PrependInt32Slot(0, ClanRewardType, 0)
def ClanRewardExcelAddEchelonType(builder, EchelonType): builder.PrependInt32Slot(1, EchelonType, 0)
def ClanRewardExcelAddRewardParcelType(builder, RewardParcelType): builder.PrependInt32Slot(2, RewardParcelType, 0)
def ClanRewardExcelAddRewardParcelId(builder, RewardParcelId): builder.PrependInt64Slot(3, RewardParcelId, 0)
def ClanRewardExcelAddRewardParcelAmount(builder, RewardParcelAmount): builder.PrependInt64Slot(4, RewardParcelAmount, 0)
def ClanRewardExcelEnd(builder): return builder.EndObject()
