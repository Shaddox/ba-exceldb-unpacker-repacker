# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class CafeProductionExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsCafeProductionExcel(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = CafeProductionExcel()
        x.Init(buf, n + offset)
        return x

    # CafeProductionExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # CafeProductionExcel
    def CafeId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CafeProductionExcel
    def Rank(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CafeProductionExcel
    def CafeProductionParcelType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CafeProductionExcel
    def CafeProductionParcelId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CafeProductionExcel
    def ParcelProductionCoefficient(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CafeProductionExcel
    def ParcelProductionCorrectionValue(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CafeProductionExcel
    def ParcelStorageMax(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def CafeProductionExcelStart(builder): builder.StartObject(7)
def CafeProductionExcelAddCafeId(builder, CafeId): builder.PrependInt64Slot(0, CafeId, 0)
def CafeProductionExcelAddRank(builder, Rank): builder.PrependInt64Slot(1, Rank, 0)
def CafeProductionExcelAddCafeProductionParcelType(builder, CafeProductionParcelType): builder.PrependInt32Slot(2, CafeProductionParcelType, 0)
def CafeProductionExcelAddCafeProductionParcelId(builder, CafeProductionParcelId): builder.PrependInt64Slot(3, CafeProductionParcelId, 0)
def CafeProductionExcelAddParcelProductionCoefficient(builder, ParcelProductionCoefficient): builder.PrependInt64Slot(4, ParcelProductionCoefficient, 0)
def CafeProductionExcelAddParcelProductionCorrectionValue(builder, ParcelProductionCorrectionValue): builder.PrependInt64Slot(5, ParcelProductionCorrectionValue, 0)
def CafeProductionExcelAddParcelStorageMax(builder, ParcelStorageMax): builder.PrependInt64Slot(6, ParcelStorageMax, 0)
def CafeProductionExcelEnd(builder): return builder.EndObject()
