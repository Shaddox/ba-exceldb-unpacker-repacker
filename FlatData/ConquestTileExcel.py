# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ConquestTileExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsConquestTileExcel(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ConquestTileExcel()
        x.Init(buf, n + offset)
        return x

    # ConquestTileExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ConquestTileExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConquestTileExcel
    def Name(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ConquestTileExcel
    def EventId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConquestTileExcel
    def Step(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConquestTileExcel
    def PrefabName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ConquestTileExcel
    def TileNameLocalize(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ConquestTileExcel
    def TileImageName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ConquestTileExcel
    def Playable(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # ConquestTileExcel
    def TileType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConquestTileExcel
    def NotMapFog(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # ConquestTileExcel
    def GroupBonusId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConquestTileExcel
    def ConquestCostType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConquestTileExcel
    def ConquestCostId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConquestTileExcel
    def ConquestCostAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConquestTileExcel
    def ManageCostType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConquestTileExcel
    def ManageCostId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConquestTileExcel
    def ManageCostAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConquestTileExcel
    def ConquestRewardId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(38))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConquestTileExcel
    def MassErosionId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(40))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConquestTileExcel
    def Upgrade2CostType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(42))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConquestTileExcel
    def Upgrade2CostId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(44))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConquestTileExcel
    def Upgrade2CostAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(46))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConquestTileExcel
    def Upgrade3CostType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(48))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConquestTileExcel
    def Upgrade3CostId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(50))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConquestTileExcel
    def Upgrade3CostAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(52))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def ConquestTileExcelStart(builder): builder.StartObject(25)
def ConquestTileExcelAddId(builder, Id): builder.PrependInt64Slot(0, Id, 0)
def ConquestTileExcelAddName(builder, Name): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(Name), 0)
def ConquestTileExcelAddEventId(builder, EventId): builder.PrependInt64Slot(2, EventId, 0)
def ConquestTileExcelAddStep(builder, Step): builder.PrependInt32Slot(3, Step, 0)
def ConquestTileExcelAddPrefabName(builder, PrefabName): builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(PrefabName), 0)
def ConquestTileExcelAddTileNameLocalize(builder, TileNameLocalize): builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(TileNameLocalize), 0)
def ConquestTileExcelAddTileImageName(builder, TileImageName): builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(TileImageName), 0)
def ConquestTileExcelAddPlayable(builder, Playable): builder.PrependBoolSlot(7, Playable, 0)
def ConquestTileExcelAddTileType(builder, TileType): builder.PrependInt32Slot(8, TileType, 0)
def ConquestTileExcelAddNotMapFog(builder, NotMapFog): builder.PrependBoolSlot(9, NotMapFog, 0)
def ConquestTileExcelAddGroupBonusId(builder, GroupBonusId): builder.PrependInt64Slot(10, GroupBonusId, 0)
def ConquestTileExcelAddConquestCostType(builder, ConquestCostType): builder.PrependInt32Slot(11, ConquestCostType, 0)
def ConquestTileExcelAddConquestCostId(builder, ConquestCostId): builder.PrependInt64Slot(12, ConquestCostId, 0)
def ConquestTileExcelAddConquestCostAmount(builder, ConquestCostAmount): builder.PrependInt32Slot(13, ConquestCostAmount, 0)
def ConquestTileExcelAddManageCostType(builder, ManageCostType): builder.PrependInt32Slot(14, ManageCostType, 0)
def ConquestTileExcelAddManageCostId(builder, ManageCostId): builder.PrependInt64Slot(15, ManageCostId, 0)
def ConquestTileExcelAddManageCostAmount(builder, ManageCostAmount): builder.PrependInt32Slot(16, ManageCostAmount, 0)
def ConquestTileExcelAddConquestRewardId(builder, ConquestRewardId): builder.PrependInt64Slot(17, ConquestRewardId, 0)
def ConquestTileExcelAddMassErosionId(builder, MassErosionId): builder.PrependInt64Slot(18, MassErosionId, 0)
def ConquestTileExcelAddUpgrade2CostType(builder, Upgrade2CostType): builder.PrependInt32Slot(19, Upgrade2CostType, 0)
def ConquestTileExcelAddUpgrade2CostId(builder, Upgrade2CostId): builder.PrependInt64Slot(20, Upgrade2CostId, 0)
def ConquestTileExcelAddUpgrade2CostAmount(builder, Upgrade2CostAmount): builder.PrependInt32Slot(21, Upgrade2CostAmount, 0)
def ConquestTileExcelAddUpgrade3CostType(builder, Upgrade3CostType): builder.PrependInt32Slot(22, Upgrade3CostType, 0)
def ConquestTileExcelAddUpgrade3CostId(builder, Upgrade3CostId): builder.PrependInt64Slot(23, Upgrade3CostId, 0)
def ConquestTileExcelAddUpgrade3CostAmount(builder, Upgrade3CostAmount): builder.PrependInt32Slot(24, Upgrade3CostAmount, 0)
def ConquestTileExcelEnd(builder): return builder.EndObject()
