# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class EventContentCurrencyItemExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsEventContentCurrencyItemExcel(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = EventContentCurrencyItemExcel()
        x.Init(buf, n + offset)
        return x

    # EventContentCurrencyItemExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # EventContentCurrencyItemExcel
    def EventContentId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EventContentCurrencyItemExcel
    def EventContentItemType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # EventContentCurrencyItemExcel
    def ItemUniqueId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def EventContentCurrencyItemExcelStart(builder): builder.StartObject(3)
def EventContentCurrencyItemExcelAddEventContentId(builder, EventContentId): builder.PrependInt64Slot(0, EventContentId, 0)
def EventContentCurrencyItemExcelAddEventContentItemType(builder, EventContentItemType): builder.PrependInt32Slot(1, EventContentItemType, 0)
def EventContentCurrencyItemExcelAddItemUniqueId(builder, ItemUniqueId): builder.PrependInt64Slot(2, ItemUniqueId, 0)
def EventContentCurrencyItemExcelEnd(builder): return builder.EndObject()
