# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class Video_GlobalExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsVideo_GlobalExcel(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Video_GlobalExcel()
        x.Init(buf, n + offset)
        return x

    # Video_GlobalExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Video_GlobalExcel
    def VideoId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # Video_GlobalExcel
    def VideoPathKr(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Video_GlobalExcel
    def VideoTeenPathKr(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Video_GlobalExcel
    def VideoPathTh(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Video_GlobalExcel
    def VideoTeenPathTh(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Video_GlobalExcel
    def VideoPathTw(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Video_GlobalExcel
    def VideoTeenPathTw(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Video_GlobalExcel
    def VideoPathEn(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Video_GlobalExcel
    def VideoTeenPathEn(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def Video_GlobalExcelStart(builder): builder.StartObject(9)
def Video_GlobalExcelAddVideoId(builder, VideoId): builder.PrependInt64Slot(0, VideoId, 0)
def Video_GlobalExcelAddVideoPathKr(builder, VideoPathKr): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(VideoPathKr), 0)
def Video_GlobalExcelAddVideoTeenPathKr(builder, VideoTeenPathKr): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(VideoTeenPathKr), 0)
def Video_GlobalExcelAddVideoPathTh(builder, VideoPathTh): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(VideoPathTh), 0)
def Video_GlobalExcelAddVideoTeenPathTh(builder, VideoTeenPathTh): builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(VideoTeenPathTh), 0)
def Video_GlobalExcelAddVideoPathTw(builder, VideoPathTw): builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(VideoPathTw), 0)
def Video_GlobalExcelAddVideoTeenPathTw(builder, VideoTeenPathTw): builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(VideoTeenPathTw), 0)
def Video_GlobalExcelAddVideoPathEn(builder, VideoPathEn): builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(VideoPathEn), 0)
def Video_GlobalExcelAddVideoTeenPathEn(builder, VideoTeenPathEn): builder.PrependUOffsetTRelativeSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(VideoTeenPathEn), 0)
def Video_GlobalExcelEnd(builder): return builder.EndObject()
