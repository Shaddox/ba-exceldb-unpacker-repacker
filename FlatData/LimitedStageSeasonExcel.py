# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class LimitedStageSeasonExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsLimitedStageSeasonExcel(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = LimitedStageSeasonExcel()
        x.Init(buf, n + offset)
        return x

    # LimitedStageSeasonExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # LimitedStageSeasonExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # LimitedStageSeasonExcel
    def StartDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # LimitedStageSeasonExcel
    def EndDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # LimitedStageSeasonExcel
    def TypeACount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # LimitedStageSeasonExcel
    def TypeBCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # LimitedStageSeasonExcel
    def TypeCCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def LimitedStageSeasonExcelStart(builder): builder.StartObject(6)
def LimitedStageSeasonExcelAddId(builder, Id): builder.PrependInt64Slot(0, Id, 0)
def LimitedStageSeasonExcelAddStartDate(builder, StartDate): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(StartDate), 0)
def LimitedStageSeasonExcelAddEndDate(builder, EndDate): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(EndDate), 0)
def LimitedStageSeasonExcelAddTypeACount(builder, TypeACount): builder.PrependInt64Slot(3, TypeACount, 0)
def LimitedStageSeasonExcelAddTypeBCount(builder, TypeBCount): builder.PrependInt64Slot(4, TypeBCount, 0)
def LimitedStageSeasonExcelAddTypeCCount(builder, TypeCCount): builder.PrependInt64Slot(5, TypeCCount, 0)
def LimitedStageSeasonExcelEnd(builder): return builder.EndObject()
