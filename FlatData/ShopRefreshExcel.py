# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ShopRefreshExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsShopRefreshExcel(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ShopRefreshExcel()
        x.Init(buf, n + offset)
        return x

    # ShopRefreshExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ShopRefreshExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ShopRefreshExcel
    def LocalizeEtcId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # ShopRefreshExcel
    def IsLegacy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # ShopRefreshExcel
    def GoodsId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ShopRefreshExcel
    def IsBundle(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # ShopRefreshExcel
    def VisibleAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ShopRefreshExcel
    def DisplayOrder(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ShopRefreshExcel
    def CategoryType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ShopRefreshExcel
    def RefreshGroup(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ShopRefreshExcel
    def Prob(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ShopRefreshExcel
    def BuyReportEventName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ShopRefreshExcel
    def DisplayTag(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def ShopRefreshExcelStart(builder): builder.StartObject(12)
def ShopRefreshExcelAddId(builder, Id): builder.PrependInt64Slot(0, Id, 0)
def ShopRefreshExcelAddLocalizeEtcId(builder, LocalizeEtcId): builder.PrependUint32Slot(1, LocalizeEtcId, 0)
def ShopRefreshExcelAddIsLegacy(builder, IsLegacy): builder.PrependBoolSlot(2, IsLegacy, 0)
def ShopRefreshExcelAddGoodsId(builder, GoodsId): builder.PrependInt64Slot(3, GoodsId, 0)
def ShopRefreshExcelAddIsBundle(builder, IsBundle): builder.PrependBoolSlot(4, IsBundle, 0)
def ShopRefreshExcelAddVisibleAmount(builder, VisibleAmount): builder.PrependInt64Slot(5, VisibleAmount, 0)
def ShopRefreshExcelAddDisplayOrder(builder, DisplayOrder): builder.PrependInt64Slot(6, DisplayOrder, 0)
def ShopRefreshExcelAddCategoryType(builder, CategoryType): builder.PrependInt32Slot(7, CategoryType, 0)
def ShopRefreshExcelAddRefreshGroup(builder, RefreshGroup): builder.PrependInt32Slot(8, RefreshGroup, 0)
def ShopRefreshExcelAddProb(builder, Prob): builder.PrependInt32Slot(9, Prob, 0)
def ShopRefreshExcelAddBuyReportEventName(builder, BuyReportEventName): builder.PrependUOffsetTRelativeSlot(10, flatbuffers.number_types.UOffsetTFlags.py_type(BuyReportEventName), 0)
def ShopRefreshExcelAddDisplayTag(builder, DisplayTag): builder.PrependInt32Slot(11, DisplayTag, 0)
def ShopRefreshExcelEnd(builder): return builder.EndObject()
