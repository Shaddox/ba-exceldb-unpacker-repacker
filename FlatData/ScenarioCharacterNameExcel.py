# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ScenarioCharacterNameExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsScenarioCharacterNameExcel(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ScenarioCharacterNameExcel()
        x.Init(buf, n + offset)
        return x

    # ScenarioCharacterNameExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ScenarioCharacterNameExcel
    def CharacterName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # ScenarioCharacterNameExcel
    def ProductionStep(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ScenarioCharacterNameExcel
    def NameKR(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ScenarioCharacterNameExcel
    def NicknameKR(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ScenarioCharacterNameExcel
    def NameJP(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ScenarioCharacterNameExcel
    def NicknameJP(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ScenarioCharacterNameExcel
    def NameTH(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ScenarioCharacterNameExcel
    def NicknameTH(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ScenarioCharacterNameExcel
    def NameTW(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ScenarioCharacterNameExcel
    def NicknameTW(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ScenarioCharacterNameExcel
    def NameEN(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ScenarioCharacterNameExcel
    def NicknameEN(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ScenarioCharacterNameExcel
    def Shape(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ScenarioCharacterNameExcel
    def SpinePrefabName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ScenarioCharacterNameExcel
    def SmallPortrait(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def ScenarioCharacterNameExcelStart(builder): builder.StartObject(15)
def ScenarioCharacterNameExcelAddCharacterName(builder, CharacterName): builder.PrependUint32Slot(0, CharacterName, 0)
def ScenarioCharacterNameExcelAddProductionStep(builder, ProductionStep): builder.PrependInt32Slot(1, ProductionStep, 0)
def ScenarioCharacterNameExcelAddNameKR(builder, NameKR): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(NameKR), 0)
def ScenarioCharacterNameExcelAddNicknameKR(builder, NicknameKR): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(NicknameKR), 0)
def ScenarioCharacterNameExcelAddNameJP(builder, NameJP): builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(NameJP), 0)
def ScenarioCharacterNameExcelAddNicknameJP(builder, NicknameJP): builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(NicknameJP), 0)
def ScenarioCharacterNameExcelAddNameTH(builder, NameTH): builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(NameTH), 0)
def ScenarioCharacterNameExcelAddNicknameTH(builder, NicknameTH): builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(NicknameTH), 0)
def ScenarioCharacterNameExcelAddNameTW(builder, NameTW): builder.PrependUOffsetTRelativeSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(NameTW), 0)
def ScenarioCharacterNameExcelAddNicknameTW(builder, NicknameTW): builder.PrependUOffsetTRelativeSlot(9, flatbuffers.number_types.UOffsetTFlags.py_type(NicknameTW), 0)
def ScenarioCharacterNameExcelAddNameEN(builder, NameEN): builder.PrependUOffsetTRelativeSlot(10, flatbuffers.number_types.UOffsetTFlags.py_type(NameEN), 0)
def ScenarioCharacterNameExcelAddNicknameEN(builder, NicknameEN): builder.PrependUOffsetTRelativeSlot(11, flatbuffers.number_types.UOffsetTFlags.py_type(NicknameEN), 0)
def ScenarioCharacterNameExcelAddShape(builder, Shape): builder.PrependInt32Slot(12, Shape, 0)
def ScenarioCharacterNameExcelAddSpinePrefabName(builder, SpinePrefabName): builder.PrependUOffsetTRelativeSlot(13, flatbuffers.number_types.UOffsetTFlags.py_type(SpinePrefabName), 0)
def ScenarioCharacterNameExcelAddSmallPortrait(builder, SmallPortrait): builder.PrependUOffsetTRelativeSlot(14, flatbuffers.number_types.UOffsetTFlags.py_type(SmallPortrait), 0)
def ScenarioCharacterNameExcelEnd(builder): return builder.EndObject()
