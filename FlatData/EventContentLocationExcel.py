# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class EventContentLocationExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsEventContentLocationExcel(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = EventContentLocationExcel()
        x.Init(buf, n + offset)
        return x

    # EventContentLocationExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # EventContentLocationExcel
    def EventContentId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EventContentLocationExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EventContentLocationExcel
    def LocalizeEtcId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # EventContentLocationExcel
    def PrefabPath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # EventContentLocationExcel
    def LocationResetScheduleCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # EventContentLocationExcel
    def ScheduleEventPointCostParcelType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # EventContentLocationExcel
    def ScheduleEventPointCostParcelId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EventContentLocationExcel
    def ScheduleEventPointCostParcelAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EventContentLocationExcel
    def RewardParcelType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # EventContentLocationExcel
    def RewardParcelId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EventContentLocationExcel
    def InformationGroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def EventContentLocationExcelStart(builder): builder.StartObject(11)
def EventContentLocationExcelAddEventContentId(builder, EventContentId): builder.PrependInt64Slot(0, EventContentId, 0)
def EventContentLocationExcelAddId(builder, Id): builder.PrependInt64Slot(1, Id, 0)
def EventContentLocationExcelAddLocalizeEtcId(builder, LocalizeEtcId): builder.PrependUint32Slot(2, LocalizeEtcId, 0)
def EventContentLocationExcelAddPrefabPath(builder, PrefabPath): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(PrefabPath), 0)
def EventContentLocationExcelAddLocationResetScheduleCount(builder, LocationResetScheduleCount): builder.PrependInt32Slot(4, LocationResetScheduleCount, 0)
def EventContentLocationExcelAddScheduleEventPointCostParcelType(builder, ScheduleEventPointCostParcelType): builder.PrependInt32Slot(5, ScheduleEventPointCostParcelType, 0)
def EventContentLocationExcelAddScheduleEventPointCostParcelId(builder, ScheduleEventPointCostParcelId): builder.PrependInt64Slot(6, ScheduleEventPointCostParcelId, 0)
def EventContentLocationExcelAddScheduleEventPointCostParcelAmount(builder, ScheduleEventPointCostParcelAmount): builder.PrependInt64Slot(7, ScheduleEventPointCostParcelAmount, 0)
def EventContentLocationExcelAddRewardParcelType(builder, RewardParcelType): builder.PrependInt32Slot(8, RewardParcelType, 0)
def EventContentLocationExcelAddRewardParcelId(builder, RewardParcelId): builder.PrependInt64Slot(9, RewardParcelId, 0)
def EventContentLocationExcelAddInformationGroupId(builder, InformationGroupId): builder.PrependInt64Slot(10, InformationGroupId, 0)
def EventContentLocationExcelEnd(builder): return builder.EndObject()
