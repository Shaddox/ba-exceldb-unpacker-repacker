# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ShopFilterClassifiedExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsShopFilterClassifiedExcel(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ShopFilterClassifiedExcel()
        x.Init(buf, n + offset)
        return x

    # ShopFilterClassifiedExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ShopFilterClassifiedExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ShopFilterClassifiedExcel
    def CategoryType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ShopFilterClassifiedExcel
    def ConsumeParcelType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ShopFilterClassifiedExcel
    def ConsumeParcelId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ShopFilterClassifiedExcel
    def ShopFilterType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ShopFilterClassifiedExcel
    def GoodsId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def ShopFilterClassifiedExcelStart(builder): builder.StartObject(6)
def ShopFilterClassifiedExcelAddId(builder, Id): builder.PrependInt64Slot(0, Id, 0)
def ShopFilterClassifiedExcelAddCategoryType(builder, CategoryType): builder.PrependInt32Slot(1, CategoryType, 0)
def ShopFilterClassifiedExcelAddConsumeParcelType(builder, ConsumeParcelType): builder.PrependInt32Slot(2, ConsumeParcelType, 0)
def ShopFilterClassifiedExcelAddConsumeParcelId(builder, ConsumeParcelId): builder.PrependInt64Slot(3, ConsumeParcelId, 0)
def ShopFilterClassifiedExcelAddShopFilterType(builder, ShopFilterType): builder.PrependInt32Slot(4, ShopFilterType, 0)
def ShopFilterClassifiedExcelAddGoodsId(builder, GoodsId): builder.PrependInt64Slot(5, GoodsId, 0)
def ShopFilterClassifiedExcelEnd(builder): return builder.EndObject()
