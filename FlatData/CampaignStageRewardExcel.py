# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class CampaignStageRewardExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsCampaignStageRewardExcel(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = CampaignStageRewardExcel()
        x.Init(buf, n + offset)
        return x

    # CampaignStageRewardExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # CampaignStageRewardExcel
    def GroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CampaignStageRewardExcel
    def RewardTag(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CampaignStageRewardExcel
    def StageRewardProb(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CampaignStageRewardExcel
    def StageRewardParcelType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CampaignStageRewardExcel
    def StageRewardId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CampaignStageRewardExcel
    def StageRewardAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CampaignStageRewardExcel
    def IsDisplayed(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

def CampaignStageRewardExcelStart(builder): builder.StartObject(7)
def CampaignStageRewardExcelAddGroupId(builder, GroupId): builder.PrependInt64Slot(0, GroupId, 0)
def CampaignStageRewardExcelAddRewardTag(builder, RewardTag): builder.PrependInt32Slot(1, RewardTag, 0)
def CampaignStageRewardExcelAddStageRewardProb(builder, StageRewardProb): builder.PrependInt32Slot(2, StageRewardProb, 0)
def CampaignStageRewardExcelAddStageRewardParcelType(builder, StageRewardParcelType): builder.PrependInt32Slot(3, StageRewardParcelType, 0)
def CampaignStageRewardExcelAddStageRewardId(builder, StageRewardId): builder.PrependInt64Slot(4, StageRewardId, 0)
def CampaignStageRewardExcelAddStageRewardAmount(builder, StageRewardAmount): builder.PrependInt32Slot(5, StageRewardAmount, 0)
def CampaignStageRewardExcelAddIsDisplayed(builder, IsDisplayed): builder.PrependBoolSlot(6, IsDisplayed, 0)
def CampaignStageRewardExcelEnd(builder): return builder.EndObject()
